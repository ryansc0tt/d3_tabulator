export default class d3_tabulator{constructor(){this._table_views=Array(),this._table_data=Array(),this._filterable_cols={},this._on_table_change=function(e){}}_filter_table(e,t){e.select("tbody").selectAll("tr").filter(e=>e[t.col_name]!=t.value).style("visibility","collapse");let l=e.select("caption").node();l.innerText=`${l.innerText}: ${t.value}`,this._on_table_change(e)}_on_table_sort(e,t){let l=e.select("thead").select("tr"),a=l.selectAll("th"),n=a.filter(e=>e.name==t);if(null!=n){let i=n.data()[0].sorted_asc;i?(e.select("tbody").selectAll("tr").sort(function(e,l){return d3.descending(e[t],l[t])}),i=!1):(e.select("tbody").selectAll("tr").sort(function(e,l){return d3.ascending(e[t],l[t])}),i=!0);let s=a.data().map(e=>(e.name==t?(e.sorted_asc=i,e.text=i?`${e.head} â–²`:`${e.head} â–¼`):(e.sorted_asc=null,e.text=`${e.head}`),e));this._render_table_head(l,s)}this._on_table_change(e)}_render_table_head(e,t){let l=e.selectAll("th").data(t),a=l.enter().append("th").merge(l);a.html("").text(e=>e.text),a.filter(filter_obj_by_val("sortable",!0)).html("").append("a").on("click",t=>{let l=d3.select(e.node().parentNode.parentNode);this._on_table_sort(l,t.name)}).attr("href","#").text(e=>e.text)}_render_table_data(e,t){e.each((l,a,n)=>{let i=d3.select(n[a]).selectAll("td").data(e=>t.map(t=>(t.value=e[t.col_name],null!=t.round?t.text=t.value.toFixed(t.round):t.text=String(t.value),t))).enter().append("td");i.text(e=>e.text);let s=Object.keys(this._filterable_cols);i.filter(filter_obj_by_list(s,"col_name")).html("").append("a").on("click",(t,l,a)=>{t.value=t.text=a[0].innerText;let n=d3.select(e.node().parentNode.parentNode);this._replace_table(n,this._filterable_cols[t.col_name][0],t)}).attr("href","#").text(e=>e.text)})}_replace_table(e,t,l={}){let a=this.tabulate_view(t,l);e.node().replaceWith(a.node()),this._on_table_change(a)}create_view(e,t,l,a={},n={},i={},s={}){let _=this._table_views.filter(filter_obj_by_val("filename",t))[0].cols,r=new table_view(e,t,l);Object.keys(a).length>0?_.forEach(e=>{Object.keys(a).includes(e.name)&&r.cols.push(new view_col(e.name,a[e.name],e.is_numeric,view_col.round,view_col.sortable,view_col.filterable))}):r.cols=_.map(e=>({...e})),assign_prop_by_name(r.cols,"round",n),assign_prop_by_name(r.cols,"sortable",i),assign_prop_by_name(r.cols,"filterable",s),r.cols.filter(e=>e.filterable).forEach(e=>{Object.keys(this._filterable_cols).includes(e.name)?this._filterable_cols[e.name].push(r.viewname):this._filterable_cols[e.name]=[r.viewname]}),this._table_views.push(r)}load_data(e){return new Promise((t,l)=>{e.forEach(a=>{let n=d3_load_function(a);null!=n?n(a).then(l=>{let n=Object.keys(l[0]).map(e=>new view_col(e,e,!isNaN(l[0][e])));n.forEach(e=>{e.is_numeric&&l.map(t=>{t[e.name]=+t[e.name]})}),this._table_views.push(new table_view(a,a,a,n)),this._table_data.push(new table_data(a,l)),e.every(e=>this._table_views.map(e=>e.filename).includes(e))&&t()}).catch(e=>{l(`Error while loading '${a}'`)}):l(`No load function for '${a}'`)})})}set_on_table_change(e){this._on_table_change=e}tabulate_view(e,t={}){let l=this._table_views.filter(filter_obj_by_val("viewname",e))[0];if(null!=l){let e=this._table_data.filter(filter_obj_by_val("filename",l.filename))[0].data,a=l.cols.map(e=>({name:e.name,head:e.head,text:String(e.head),sortable:e.sortable,sorted_asc:null})),n=l.cols.map(e=>({col_name:e.name,value:null,text:"",round:e.round})),i=d3.select(document.createElement("table"));i.data([l]),i.append("caption").text(l.title);let s=i.append("thead").append("tr");this._render_table_head(s,a);let _=i.append("tbody").selectAll("tr").data(e).enter().append("tr");return _.style("visibility","visible"),this._render_table_data(_,n),Object.keys(t).length>0&&this._filter_table(i,t),i}}}function table_data(e,t){this.filename=e,this.data=t}function table_view(e,t,l,a=[]){this.viewname=e,this.filename=t,this.title=l,this.cols=a}function view_col(e,t,l=null,a=null,n=!0,i=!1){this.name=e,this.head=t,this.is_numeric=l,this.round=a,this.sortable=n,this.filterable=i}const assign_prop_by_name=(e,t,l)=>{let a=Object.keys(l);a.length>0&&e.forEach(e=>{a.includes(e.name)&&(e[t]=l[e.name])})},d3_load_function=e=>{switch(e.split(".").pop()){case"csv":return d3.csv;case"json":return d3.json;case"tsv":return d3.tsv;case"xml":return d3.xml;default:return null}},filter_obj_by_val=(e,t)=>l=>{if(l[e]==t)return l},filter_obj_by_list=(e,t)=>l=>{if(e.includes(l[t]))return l};